{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/my-todo-app/src/components/Footer.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nconst FILTER_TITLES = {\n  SHOW_ALL: 'All',\n  SHOW_ACTIVE: 'Active',\n  SHOW_COMPLETED: 'Completed'\n};\nexport default class Footer extends Component {\n  renderTodoCount() {\n    const {\n      activeCount\n    } = this.props;\n    const itemWord = activeCount === 1 ? 'item' : 'items';\n    return React.createElement(\"span\", {\n      className: \"todo-count\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 17\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 18\n      },\n      __self: this\n    }, activeCount || 'No'), itemWord, \" left\");\n  }\n\n  renderFilterLink(filter) {\n    const title = FILTER_TITLES[filter];\n    const {\n      filter: selectedFilter,\n      onShow\n    } = this.props;\n    return React.createElement(\"a\", {\n      className: classnames({\n        selected: filter === selectedFilter\n      }),\n      style: {\n        cursor: 'pointer'\n      },\n      onClick: () => onShow(filter),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, title);\n  }\n\n  renderClearButton() {\n    const {\n      completedCount,\n      onClearCompleted\n    } = this.props;\n\n    if (completedCount > 0) {\n      return React.createElement(\"button\", {\n        className: \"clear-completed\",\n        onClick: onClearCompleted,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }, \"Clear completed\");\n    }\n  }\n\n  renderFilterList() {\n    return ['SHOW_ALL', 'SHOW_ACTIVE', 'SHOW_COMPLETED'].map(filter => React.createElement(\"li\", {\n      key: filter,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, this.renderFilterLink(filter)));\n  }\n\n  render() {\n    return React.createElement(\"footer\", {\n      className: \"footer\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, this.renderTodoCount(), React.createElement(\"ul\", {\n      className: \"filters\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 64\n      },\n      __self: this\n    }, this.renderFilterList()), this.renderClearButton());\n  }\n\n}","map":{"version":3,"sources":["/home/user/Desktop/my-todo-app/src/components/Footer.js"],"names":["React","Component","classnames","FILTER_TITLES","SHOW_ALL","SHOW_ACTIVE","SHOW_COMPLETED","Footer","renderTodoCount","activeCount","props","itemWord","renderFilterLink","filter","title","selectedFilter","onShow","selected","cursor","renderClearButton","completedCount","onClearCompleted","renderFilterList","map","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,MAAMC,aAAa,GAAG;AACpBC,EAAAA,QAAQ,EAAE,KADU;AAEpBC,EAAAA,WAAW,EAAE,QAFO;AAGpBC,EAAAA,cAAc,EAAE;AAHI,CAAtB;AAMA,eAAe,MAAMC,MAAN,SAAqBN,SAArB,CAA+B;AAC5CO,EAAAA,eAAe,GAAG;AAChB,UAAM;AAACC,MAAAA;AAAD,QAAgB,KAAKC,KAA3B;AAEA,UAAMC,QAAQ,GAAGF,WAAW,KAAK,CAAhB,GAAoB,MAApB,GAA6B,OAA9C;AAEA,WACE;AAAM,MAAA,SAAS,EAAC,YAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASA,WAAW,IAAI,IAAxB,CADF,EAEGE,QAFH,UADF;AAMD;;AAEDC,EAAAA,gBAAgB,CAACC,MAAD,EAAS;AACvB,UAAMC,KAAK,GAAGX,aAAa,CAACU,MAAD,CAA3B;AACA,UAAM;AAACA,MAAAA,MAAM,EAAEE,cAAT;AAAyBC,MAAAA;AAAzB,QAAmC,KAAKN,KAA9C;AAEA,WACE;AACE,MAAA,SAAS,EAAER,UAAU,CAAC;AAAEe,QAAAA,QAAQ,EAAEJ,MAAM,KAAKE;AAAvB,OAAD,CADvB;AAEE,MAAA,KAAK,EAAE;AAACG,QAAAA,MAAM,EAAE;AAAT,OAFT;AAGE,MAAA,OAAO,EAAE,MAAMF,MAAM,CAACH,MAAD,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAIGC,KAJH,CADF;AAQD;;AAEDK,EAAAA,iBAAiB,GAAG;AAClB,UAAM;AAACC,MAAAA,cAAD;AAAiBC,MAAAA;AAAjB,QAAqC,KAAKX,KAAhD;;AACA,QAAIU,cAAc,GAAG,CAArB,EAAwB;AACtB,aACE;AAAQ,QAAA,SAAS,EAAC,iBAAlB;AAAoC,QAAA,OAAO,EAAEC,gBAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF;AAKD;AACF;;AAEDC,EAAAA,gBAAgB,GAAG;AACjB,WAAO,CAAC,UAAD,EAAa,aAAb,EAA4B,gBAA5B,EACJC,GADI,CACAV,MAAM,IACT;AAAI,MAAA,GAAG,EAAEA,MAAT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKD,gBAAL,CAAsBC,MAAtB,CADH,CAFG,CAAP;AAMD;;AAEDW,EAAAA,MAAM,GAAG;AACP,WACE;AAAQ,MAAA,SAAS,EAAC,QAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEG,KAAKhB,eAAL,EAFH,EAIE;AAAI,MAAA,SAAS,EAAC,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACG,KAAKc,gBAAL,EADH,CAJF,EAQG,KAAKH,iBAAL,EARH,CADF;AAaD;;AA9D2C","sourcesContent":["import React, {Component} from 'react'\nimport classnames from 'classnames'\n\nconst FILTER_TITLES = {\n  SHOW_ALL: 'All',\n  SHOW_ACTIVE: 'Active',\n  SHOW_COMPLETED: 'Completed'\n}\n\nexport default class Footer extends Component {\n  renderTodoCount() {\n    const {activeCount} = this.props\n\n    const itemWord = activeCount === 1 ? 'item' : 'items'\n\n    return (\n      <span className=\"todo-count\">\n        <strong>{activeCount || 'No'}</strong>\n        {itemWord} left\n      </span>\n    )\n  }\n\n  renderFilterLink(filter) {\n    const title = FILTER_TITLES[filter]\n    const {filter: selectedFilter, onShow} = this.props\n\n    return (\n      <a\n        className={classnames({ selected: filter === selectedFilter })}\n        style={{cursor: 'pointer' }}\n        onClick={() => onShow(filter)}>\n        {title}\n      </a>\n    )\n  }\n\n  renderClearButton() {\n    const {completedCount, onClearCompleted} = this.props\n    if (completedCount > 0) {\n      return (\n        <button className=\"clear-completed\" onClick={onClearCompleted} >\n          Clear completed\n        </button>\n      )\n    }\n  }\n\n  renderFilterList() {\n    return ['SHOW_ALL', 'SHOW_ACTIVE', 'SHOW_COMPLETED']\n      .map(filter =>\n        <li key={filter}>\n          {this.renderFilterLink(filter)}\n        </li>\n    )\n  }\n\n  render() {\n    return (\n      <footer className=\"footer\">\n\n        {this.renderTodoCount()}\n\n        <ul className=\"filters\">\n          {this.renderFilterList()}\n        </ul>\n\n        {this.renderClearButton()}\n\n      </footer>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}