{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/my-todo-app/src/components/TodoItem.js\";\nimport React, { Component } from 'react';\nimport classnames from 'classnames';\nimport TodoTextInput from './TodoTextInput';\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\nexport default class TodoItem extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      editing: false\n    };\n\n    this.delTaskNotification = () => {\n      toast.error(\"Task deleted!\");\n    };\n\n    this.handleDoubleClick = () => {\n      this.setState({\n        editing: true\n      });\n      console.log(\"edit\");\n    };\n\n    this.handleSave = (id, text) => {\n      if (text.length === 0) {\n        this.props.deleteTodo(id);\n        console.log(\"DeleteBecauseThisTaskIsEmpty\");\n        toast.error(\"Task deleted!\");\n      } else {\n        this.props.editTodo(id, text);\n        console.log(\"EditSaved\");\n        toast.success(\"Edit Saved!\");\n      }\n\n      this.setState({\n        editing: false\n      });\n    };\n  }\n\n  render() {\n    const {\n      todo,\n      completeTodo,\n      deleteTodo\n    } = this.props;\n    let element;\n\n    if (this.state.editing) {\n      element = React.createElement(TodoTextInput, {\n        text: todo.text,\n        editing: this.state.editing,\n        onSave: text => this.handleSave(todo.id, text),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 43\n        },\n        __self: this\n      });\n    } else {\n      element = React.createElement(\"div\", {\n        className: \"view\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, React.createElement(\"input\", {\n        className: \"toggle\",\n        type: \"checkbox\",\n        checked: todo.completed,\n        onChange: () => completeTodo(todo.id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }), React.createElement(\"label\", {\n        onDoubleClick: this.handleDoubleClick,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 58\n        },\n        __self: this\n      }, todo.text), React.createElement(\"button\", {\n        className: \"destroy\",\n        onClick: () => deleteTodo(todo.id) + toast.error(\"Task deleted!\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 59\n        },\n        __self: this\n      }));\n    }\n\n    return React.createElement(\"li\", {\n      className: classnames({\n        completed: todo.completed,\n        editing: this.state.editing\n      }),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, element);\n  }\n\n}","map":{"version":3,"sources":["/home/user/Desktop/my-todo-app/src/components/TodoItem.js"],"names":["React","Component","classnames","TodoTextInput","toast","configure","TodoItem","state","editing","delTaskNotification","error","handleDoubleClick","setState","console","log","handleSave","id","text","length","props","deleteTodo","editTodo","success","render","todo","completeTodo","element","completed"],"mappings":"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","sourcesContent":["import React, {Component} from 'react'\nimport classnames from 'classnames'\nimport TodoTextInput from './TodoTextInput'\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure()\n\nexport default class TodoItem extends Component {\n  state = {\n    editing: false\n  }\n\n  delTaskNotification = () => {\n    toast.error(\"Task deleted!\")\n  }\n\n\n  handleDoubleClick = () => {\n    this.setState({ editing: true })\n    console.log(\"edit\")\n  }\n\n  handleSave = (id, text) => {\n    if (text.length === 0) {\n      this.props.deleteTodo(id)\n      console.log(\"DeleteBecauseThisTaskIsEmpty\")\n      toast.error(\"Task deleted!\")\n    } else {\n      this.props.editTodo(id, text)\n      console.log(\"EditSaved\")\n      toast.success(\"Edit Saved!\")\n    }\n    this.setState({ editing: false })\n  }\n\n  render() {\n    const {todo, completeTodo, deleteTodo} = this.props\n\n    let element\n    if (this.state.editing) {\n      element = (\n        <TodoTextInput\n          text={todo.text}\n          editing={this.state.editing}\n          onSave={(text) => this.handleSave(todo.id, text)}\n        />\n      )\n    } else {\n      element = (\n        <div className=\"view\">\n          <input\n            className=\"toggle\"\n            type=\"checkbox\"\n            checked={todo.completed}\n            onChange={() => completeTodo(todo.id)}\n          />\n          <label onDoubleClick={this.handleDoubleClick}>{todo.text}</label>\n          <button className=\"destroy\" onClick={() => deleteTodo(todo.id) + toast.error(\"Task deleted!\")} />\n        </div>\n      )\n    }\n\n    return (\n        <li className={classnames({\n          completed: todo.completed,\n          editing: this.state.editing\n        })}>\n          {element}\n        </li>\n    )\n  }\n}\n"]},"metadata":{},"sourceType":"module"}